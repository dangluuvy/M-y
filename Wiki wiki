#include <SFML/Graphics.hpp>
#include <vector>
#include <cstdlib>
#include <ctime>

class RainDrop {
public:
    sf::RectangleShape shape;
    float speed;

    RainDrop(float x, float y) {
        shape.setSize(sf::Vector2f(2, 10));
        shape.setPosition(x, y);
        shape.setFillColor(sf::Color::Blue);
        speed = 200 + std::rand() % 100; // Tốc độ ngẫu nhiên
    }

    void fall(float deltaTime) {
        shape.move(0, speed * deltaTime);
        if (shape.getPosition().y > 600) { // Nếu rơi xuống cuối màn hình
            shape.setPosition(shape.getPosition().x, 0); // Quay lại từ trên
        }
    }
};

int main() {
    // Khởi tạo màn hình
    sf::RenderWindow window(sf::VideoMode(800, 600), "Mo phong Dam May Mua");
    std::srand(static_cast<unsigned>(std::time(0)));

    // Tạo đám mây
    sf::RectangleShape cloud(sf::Vector2f(300, 100));
    cloud.setFillColor(sf::Color(200, 200, 200));
    cloud.setPosition(250, 50);

    // Tạo các hạt mưa
    std::vector<RainDrop> rain;
    for (int i = 0; i < 200; i++) {
        float x = std::rand() % 800;
        float y = std::rand() % 600;
        rain.emplace_back(x, y);
    }

    sf::Clock clock;

    // Vòng lặp chính
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        float deltaTime = clock.restart().asSeconds();

        // Xóa màn hình
        window.clear(sf::Color::Black);

        // Vẽ đám mây
        window.draw(cloud);

        // Cập nhật và vẽ các hạt mưa
        for (auto& drop : rain) {
            drop.fall(deltaTime);
            window.draw(drop.shape);
        }

        // Hiển thị khung hình
        window.display();
    }

    return 0;
}
